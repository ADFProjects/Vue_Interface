{"remainingRequest":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raghadaziz/Downloads/v8/Vue_Interface-main/src/views/Homepage-adf.vue?vue&type=template&id=0a75c709&scoped=true&","dependencies":[{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/src/views/Homepage-adf.vue","mtime":1629878186000},{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1636015692834},{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1636015694402},{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1636015692834},{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/vue-loader/lib/index.js","mtime":1636015693958}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}