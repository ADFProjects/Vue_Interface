{"remainingRequest":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/src/views/PublicOutboundsBox-adf.vue?vue&type=template&id=42a4f061&scoped=true&class=my-application&","dependencies":[{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/src/views/PublicOutboundsBox-adf.vue","mtime":1638861418000},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1640603462602},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640603463637},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1640603462602},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/vue-loader/lib/index.js","mtime":1640603463334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}