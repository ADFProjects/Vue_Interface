{"remainingRequest":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/src/views/OutboundsBox-adf.vue?vue&type=template&id=a7eacc50&scoped=true&","dependencies":[{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/src/views/OutboundsBox-adf.vue","mtime":1621801050000},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/cache-loader/dist/cjs.js","mtime":1615663822000},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1615663860000},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/cache-loader/dist/cjs.js","mtime":1615663822000},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/vue-loader/lib/index.js","mtime":1615663860000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}