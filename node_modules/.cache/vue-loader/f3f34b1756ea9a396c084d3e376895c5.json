{"remainingRequest":"C:\\Users\\Renad\\Documents\\GitHub\\Vue_Interface\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renad\\Documents\\GitHub\\Vue_Interface\\src\\components\\reports-adf\\IndexComponent.vue?vue&type=template&id=f6b82496&","dependencies":[{"path":"C:\\Users\\Renad\\Documents\\GitHub\\Vue_Interface\\src\\components\\reports-adf\\IndexComponent.vue","mtime":1613288317426},{"path":"C:\\Users\\Renad\\Documents\\GitHub\\Vue_Interface\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renad\\Documents\\GitHub\\Vue_Interface\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Renad\\Documents\\GitHub\\Vue_Interface\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renad\\Documents\\GitHub\\Vue_Interface\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}