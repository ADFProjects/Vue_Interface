{"remainingRequest":"/Users/raghadaziz/Downloads/Vue_Interface_2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raghadaziz/Downloads/Vue_Interface_2/src/views/Search-adf.vue?vue&type=template&id=853a7c90&scoped=true&","dependencies":[{"path":"/Users/raghadaziz/Downloads/Vue_Interface_2/src/views/Search-adf.vue","mtime":1620206584451},{"path":"/Users/raghadaziz/Downloads/Vue_Interface_2/node_modules/cache-loader/dist/cjs.js","mtime":1613549710000},{"path":"/Users/raghadaziz/Downloads/Vue_Interface_2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1613549710000},{"path":"/Users/raghadaziz/Downloads/Vue_Interface_2/node_modules/cache-loader/dist/cjs.js","mtime":1613549710000},{"path":"/Users/raghadaziz/Downloads/Vue_Interface_2/node_modules/vue-loader/lib/index.js","mtime":1613549710000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}