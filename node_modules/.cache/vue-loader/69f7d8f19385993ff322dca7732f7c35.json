{"remainingRequest":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/src/views/ScanerUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/src/views/ScanerUpload.vue","mtime":1639649102000},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1640603462602},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/babel-loader/lib/index.js","mtime":1640603463148},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1640603462602},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/vue-loader/lib/index.js","mtime":1640603463334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEeW5hbXNvZnQgZnJvbSAiZHd0IjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICBjb250YWluZXJJZDogImR3dENvbnRyb2xDb250YWluZXIiLAogICAgICBiV0FTTTogZmFsc2UsCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuYldBU00gPSBmYWxzZTsKICAgIC8qKgogICAgICogUmVzb3VyY2VzUGF0aCAmIFByb2R1Y3RLZXkgbXVzdCBiZSBzZXQgaW4gb3JkZXIgdG8gdXNlIHRoZSBsaWJyYXJ5IQogICAgICovCiAgICBEeW5hbXNvZnQuRFdULlJlc291cmNlc1BhdGggPSAiZHd0LXJlc291cmNlcyI7CiAgICBEeW5hbXNvZnQuRFdULm9yZ2FuaXphdGlvbklEID0gIjEwMDc4MDQwNSI7CiAgICBEeW5hbXNvZnQuRFdULkNvbnRhaW5lcnMgPSBbCiAgICAgIHsKICAgICAgICBXZWJUd2FpbklkOiAiZHd0T2JqZWN0IiwKICAgICAgICBDb250YWluZXJJZDogdGhpcy5jb250YWluZXJJZCwKICAgICAgICBXaWR0aDogIjEwMCUiLAogICAgICAgIEhlaWdodDogIjQwMHB4IiwKICAgICAgfSwKICAgIF07CiAgICBEeW5hbXNvZnQuRFdULlJlZ2lzdGVyRXZlbnQoIk9uV2ViVHdhaW5SZWFkeSIsICgpID0+IHsKICAgICAgdGhpcy5EeW5hbXNvZnRfT25SZWFkeSgpOwogICAgfSk7CiAgICBEeW5hbXNvZnQuRFdULkxvYWQoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIFNhdmVJbWFnZSgpIHsKICAgICAgaWYgKHRoaXMuRFdPYmplY3QpIHsKICAgICAgICB0aGlzLkRXT2JqZWN0LklmU2hvd0ZpbGVEaWFsb2cgPSB0cnVlOwogICAgICAgIGlmICh0aGlzLkRXT2JqZWN0Lkhvd01hbnlJbWFnZXNJbkJ1ZmZlciA+IDApCiAgICAgICAgICB0aGlzLkRXT2JqZWN0LlNhdmVBbGxBc011bHRpUGFnZVRJRkYoIldlYlRXQUlOSW1hZ2UudGlmZiIpOwogICAgICB9CiAgICB9LAogICAgRHluYW1zb2Z0X09uUG9zdEFsbFRyYW5zZmVycygpIHsKICAgICAgaWYgKHRoaXMuRFdPYmplY3QpIHsKICAgICAgICBpZiAodGhpcy5EV09iamVjdC5Ib3dNYW55SW1hZ2VzSW5CdWZmZXIgPiAwKSB7CiAgICAgICAgICB2YXIgc3RySFRUUFNlcnZlciA9ICJodHRwczovL2VtcC5hZGYuZ292LnNhIjsKICAgICAgICAgIHRoaXMuRFdPYmplY3QuSFRUUFBvcnQgPSBsb2NhdGlvbi5wb3J0ID09ICIiID8gNDQzIDogNDQzOwogICAgICAgICAgdmFyIHN0ckFjdGlvblBhZ2UgPSAiL2Ntczc1MTQyNTQvYXBpL0ZpbGVNYW5hZ2VyL1VwbG9hZEZpbGU/az1jbXMiOwogICAgICAgICAgLyoqCiAgICAgICAgICAgKiAxLmNoYW5nZSBmaWxlIG5hbWUKICAgICAgICAgICAqCiAgICAgICAgICAgKi8KICAgICAgICAgIHZhciB1cGxvYWRmaWxlbmFtZSA9ICJ0dC5wZGYiOwoKICAgICAgICAgIHRoaXMuRFdPYmplY3QuQ2xlYXJBbGxIVFRQRm9ybUZpZWxkKCk7CiAgICAgICAgICB0aGlzLkRXT2JqZWN0LlNldEhUVFBGb3JtRmllbGQoImsiLCAiY21zIik7CgogICAgICAgICAgdGhpcy5EV09iamVjdC5IVFRQVXBsb2FkQWxsVGhyb3VnaFBvc3RBc1BERigKICAgICAgICAgICAgc3RySFRUUFNlcnZlciwKICAgICAgICAgICAgc3RyQWN0aW9uUGFnZSwKICAgICAgICAgICAgdXBsb2FkZmlsZW5hbWUsCiAgICAgICAgICAgIGZ1bmN0aW9uIE9uSHR0cFVwbG9hZFN1Y2Nlc3MoKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coInN1Y2Nlc3NmdWwiKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZnVuY3Rpb24gb25TZXJ2ZXJSZXR1cm5lZFNvbWV0aGluZygKICAgICAgICAgICAgICBlcnJvckNvZGUsCiAgICAgICAgICAgICAgZXJyb3JTdHJpbmcsCiAgICAgICAgICAgICAgcmVzcG9uc2UKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgaWYgKGVycm9yQ29kZSAhPSAwICYmIGVycm9yQ29kZSAhPSAtMjAwMykgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coImVycm9yQ29kZTogIiArIGVycm9yQ29kZSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiZXJyb3JTdHJpbmc6ICIgKyBlcnJvclN0cmluZyk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgICAqIDIuIGFkZCB0byAoZmlsc1VybHMgKSBsaXN0IG5hbWUgLSBwYXRoIC0gdHlwZSAtIGNhdGVnb3J5CiAgICAgICAgICAgICAgICoKICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICBjb25zb2xlLmxvZygicmVzcG9uc2U6ICIgKyByZXNwb25zZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAgICAgfQogICAgICB9CiAgICAgIC8qCiAgICAgIDMuIGNhbGwgdXBsb2FkRmlsZXMKICAgICAgKi8KICAgIH0sCiAgICBEeW5hbXNvZnRfT25SZWFkeSgpIHsKICAgICAgdGhpcy5EV09iamVjdCA9IER5bmFtc29mdC5EV1QuR2V0V2ViVHdhaW4odGhpcy5jb250YWluZXJJZCk7CiAgICAgIHRoaXMuYldBU00gPSBEeW5hbXNvZnQuTGliLmVudi5iTW9iaWxlIHx8ICFEeW5hbXNvZnQuRFdULlVzZUxvY2FsU2VydmljZTsKICAgICAgaWYgKHRoaXMuYldBU00pIHsKICAgICAgICB0aGlzLkRXT2JqZWN0LlZpZXdlci5jdXJzb3IgPSAicG9pbnRlciI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbGV0IHNvdXJjZXMgPSB0aGlzLkRXT2JqZWN0LkdldFNvdXJjZU5hbWVzKCk7CiAgICAgICAgdGhpcy5zZWxlY3RTb3VyY2VzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInNvdXJjZXMiKTsKICAgICAgICB0aGlzLnNlbGVjdFNvdXJjZXMub3B0aW9ucy5sZW5ndGggPSAwOwogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc291cmNlcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgdGhpcy5zZWxlY3RTb3VyY2VzLm9wdGlvbnMuYWRkKG5ldyBPcHRpb24oc291cmNlc1tpXSwgaS50b1N0cmluZygpKSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgLyoqCiAgICAgKiBBY3F1aXJlIGltYWdlcyBmcm9tIHNjYW5uZXJzIG9yIGNhbWVyYXMgb3IgbG9jYWwgZmlsZXMKICAgICAqLwogICAgYWNxdWlyZUltYWdlKCkgewogICAgICBpZiAoIXRoaXMuRFdPYmplY3QpIHRoaXMuRFdPYmplY3QgPSBEeW5hbXNvZnQuRFdULkdldFdlYlR3YWluKCk7CiAgICAgIGlmICh0aGlzLmJXQVNNKSB7CiAgICAgICAgYWxlcnQoIlNjYW5uaW5nIGlzIG5vdCBzdXBwb3J0ZWQgdW5kZXIgdGhlIFdBU00gbW9kZSEiKTsKICAgICAgfSBlbHNlIGlmICgKICAgICAgICB0aGlzLkRXT2JqZWN0LlNvdXJjZUNvdW50ID4gMCAmJgogICAgICAgIHRoaXMuRFdPYmplY3QuU2VsZWN0U291cmNlQnlJbmRleCh0aGlzLnNlbGVjdFNvdXJjZXMuc2VsZWN0ZWRJbmRleCkKICAgICAgKSB7CiAgICAgICAgY29uc3Qgb25BY3F1aXJlSW1hZ2VTdWNjZXNzID0gKCkgPT4gewogICAgICAgICAgdGhpcy5EV09iamVjdC5DbG9zZVNvdXJjZSgpOwogICAgICAgIH07CiAgICAgICAgY29uc3Qgb25BY3F1aXJlSW1hZ2VGYWlsdXJlID0gb25BY3F1aXJlSW1hZ2VTdWNjZXNzOwogICAgICAgIHRoaXMuRFdPYmplY3QuT3BlblNvdXJjZSgpOwogICAgICAgIHRoaXMuRFdPYmplY3QuQWNxdWlyZUltYWdlKAogICAgICAgICAge30sCiAgICAgICAgICBvbkFjcXVpcmVJbWFnZVN1Y2Nlc3MsCiAgICAgICAgICBvbkFjcXVpcmVJbWFnZUZhaWx1cmUKICAgICAgICApOwogICAgICB9IGVsc2UgewogICAgICAgIGFsZXJ0KCJObyBTb3VyY2UgQXZhaWxhYmxlISIpOwogICAgICB9CiAgICB9LAogICAgLyoqCiAgICAgKiBPcGVuIGxvY2FsIGltYWdlcy4KICAgICAqLwogICAgb3BlbkltYWdlKCkgewogICAgICBpZiAoIXRoaXMuRFdPYmplY3QpIHRoaXMuRFdPYmplY3QgPSBEeW5hbXNvZnQuRFdULkdldFdlYlR3YWluKCk7CiAgICAgIHRoaXMuRFdPYmplY3QuSWZTaG93RmlsZURpYWxvZyA9IHRydWU7CiAgICAgIC8qKgogICAgICAgKiBOb3RlOgogICAgICAgKiBUaGlzIGZvbGxvd2luZyBsaW5lIG9mIGNvZGUgdXNlcyB0aGUgUERGIFJhc3Rlcml6ZXIgd2hpY2ggaXMgYW4gZXh0cmEgYWRkLW9uIHRoYXQgaXMgbGljZW5zZWQgc2VwZXJhdGVseQogICAgICAgKi8KICAgICAgdGhpcy5EV09iamVjdC5BZGRvbi5QREYuU2V0Q29udmVydE1vZGUoCiAgICAgICAgRHluYW1zb2Z0LkRXVC5FbnVtRFdUX0NvbnZlcnRNb2RlLkNNX1JFTkRFUkFMTAogICAgICApOwogICAgICB0aGlzLkRXT2JqZWN0LkxvYWRJbWFnZUV4KAogICAgICAgICIiLAogICAgICAgIER5bmFtc29mdC5EV1QuRW51bURXVF9JbWFnZVR5cGUuSVRfQUxMLAogICAgICAgICgpID0+IHsKICAgICAgICAgIC8vc3VjY2VzcwogICAgICAgIH0sCiAgICAgICAgKCkgPT4gewogICAgICAgICAgLy9mYWlsdXJlCiAgICAgICAgfQogICAgICApOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["ScanerUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScanerUpload.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"app\" class=\"justify-center text-center\">\n    <v-app id=\"inspire\">\n      <v-main>\n        <v-container>\n          <template>\n            <v-container>\n              <v-row>\n                <select v-if=\"!bWASM\" id=\"sources\"></select>\n\n                <v-btn\n                  v-if=\"!bWASM\"\n                  @click=\"acquireImage()\"\n                  class=\"mx-2\"\n                  fab\n                  dark\n                  large\n                  color=\"purple\"\n                >\n                  scan\n                </v-btn>\n                <v-btn @click=\"openImage()\" class=\"mx-2\" fab dark large color=\"green\">\n                open\n                </v-btn>\n                <v-btn class=\"mx-2\" fab dark large color=\"purple\"  @click=\"Dynamsoft_OnPostAllTransfers()\">\n                  upload\n                </v-btn>\n\n                <div v-bind:id=\"containerId\"></div>\n              </v-row>\n            </v-container>\n          </template>\n        </v-container>\n      </v-main>\n    </v-app>\n  </div>\n</template>\n<script>\nimport Dynamsoft from \"dwt\";\n\nexport default {\n  data: function () {\n    return {\n      containerId: \"dwtControlContainer\",\n      bWASM: false,\n    };\n  },\n  mounted() {\n    this.bWASM = false;\n    /**\n     * ResourcesPath & ProductKey must be set in order to use the library!\n     */\n    Dynamsoft.DWT.ResourcesPath = \"dwt-resources\";\n    Dynamsoft.DWT.organizationID = \"100780405\";\n    Dynamsoft.DWT.Containers = [\n      {\n        WebTwainId: \"dwtObject\",\n        ContainerId: this.containerId,\n        Width: \"100%\",\n        Height: \"400px\",\n      },\n    ];\n    Dynamsoft.DWT.RegisterEvent(\"OnWebTwainReady\", () => {\n      this.Dynamsoft_OnReady();\n    });\n    Dynamsoft.DWT.Load();\n  },\n  methods: {\n    SaveImage() {\n      if (this.DWObject) {\n        this.DWObject.IfShowFileDialog = true;\n        if (this.DWObject.HowManyImagesInBuffer > 0)\n          this.DWObject.SaveAllAsMultiPageTIFF(\"WebTWAINImage.tiff\");\n      }\n    },\n    Dynamsoft_OnPostAllTransfers() {\n      if (this.DWObject) {\n        if (this.DWObject.HowManyImagesInBuffer > 0) {\n          var strHTTPServer = \"https://emp.adf.gov.sa\";\n          this.DWObject.HTTPPort = location.port == \"\" ? 443 : 443;\n          var strActionPage = \"/cms7514254/api/FileManager/UploadFile?k=cms\";\n          /**\n           * 1.change file name\n           *\n           */\n          var uploadfilename = \"tt.pdf\";\n\n          this.DWObject.ClearAllHTTPFormField();\n          this.DWObject.SetHTTPFormField(\"k\", \"cms\");\n\n          this.DWObject.HTTPUploadAllThroughPostAsPDF(\n            strHTTPServer,\n            strActionPage,\n            uploadfilename,\n            function OnHttpUploadSuccess() {\n              console.log(\"successful\");\n            },\n            function onServerReturnedSomething(\n              errorCode,\n              errorString,\n              response\n            ) {\n              if (errorCode != 0 && errorCode != -2003) {\n                console.log(\"errorCode: \" + errorCode);\n                console.log(\"errorString: \" + errorString);\n              }\n              /**\n               * 2. add to (filsUrls ) list name - path - type - category\n               *\n               */\n              console.log(\"response: \" + response);\n            }\n          );\n        }\n      }\n      /*\n      3. call uploadFiles\n      */\n    },\n    Dynamsoft_OnReady() {\n      this.DWObject = Dynamsoft.DWT.GetWebTwain(this.containerId);\n      this.bWASM = Dynamsoft.Lib.env.bMobile || !Dynamsoft.DWT.UseLocalService;\n      if (this.bWASM) {\n        this.DWObject.Viewer.cursor = \"pointer\";\n      } else {\n        let sources = this.DWObject.GetSourceNames();\n        this.selectSources = document.getElementById(\"sources\");\n        this.selectSources.options.length = 0;\n        for (let i = 0; i < sources.length; i++) {\n          this.selectSources.options.add(new Option(sources[i], i.toString()));\n        }\n      }\n    },\n    /**\n     * Acquire images from scanners or cameras or local files\n     */\n    acquireImage() {\n      if (!this.DWObject) this.DWObject = Dynamsoft.DWT.GetWebTwain();\n      if (this.bWASM) {\n        alert(\"Scanning is not supported under the WASM mode!\");\n      } else if (\n        this.DWObject.SourceCount > 0 &&\n        this.DWObject.SelectSourceByIndex(this.selectSources.selectedIndex)\n      ) {\n        const onAcquireImageSuccess = () => {\n          this.DWObject.CloseSource();\n        };\n        const onAcquireImageFailure = onAcquireImageSuccess;\n        this.DWObject.OpenSource();\n        this.DWObject.AcquireImage(\n          {},\n          onAcquireImageSuccess,\n          onAcquireImageFailure\n        );\n      } else {\n        alert(\"No Source Available!\");\n      }\n    },\n    /**\n     * Open local images.\n     */\n    openImage() {\n      if (!this.DWObject) this.DWObject = Dynamsoft.DWT.GetWebTwain();\n      this.DWObject.IfShowFileDialog = true;\n      /**\n       * Note:\n       * This following line of code uses the PDF Rasterizer which is an extra add-on that is licensed seperately\n       */\n      this.DWObject.Addon.PDF.SetConvertMode(\n        Dynamsoft.DWT.EnumDWT_ConvertMode.CM_RENDERALL\n      );\n      this.DWObject.LoadImageEx(\n        \"\",\n        Dynamsoft.DWT.EnumDWT_ImageType.IT_ALL,\n        () => {\n          //success\n        },\n        () => {\n          //failure\n        }\n      );\n    },\n  },\n};\n</script>\n\n"]}]}