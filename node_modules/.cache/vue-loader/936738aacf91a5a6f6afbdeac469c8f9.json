{"remainingRequest":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raghadaziz/Downloads/v8/Vue_Interface-main/src/components/navigation-adf/navbar2.vue?vue&type=template&id=14cb709c&scoped=true&","dependencies":[{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/src/components/navigation-adf/navbar2.vue","mtime":1638376955898},{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1636015692834},{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1636015694402},{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1636015692834},{"path":"/Users/raghadaziz/Downloads/v8/Vue_Interface-main/node_modules/vue-loader/lib/index.js","mtime":1636015693958}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}