{"remainingRequest":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/src/views/login.vue?vue&type=style&index=0&id=7589b93f&scoped=true&lang=css&","dependencies":[{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/src/views/login.vue","mtime":1622963044000},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/css-loader/dist/cjs.js","mtime":1615663859709},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1615663860371},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/postcss-loader/src/index.js","mtime":1615663860281},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/cache-loader/dist/cjs.js","mtime":1615663822203},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/vue-loader/lib/index.js","mtime":1615663860371}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5tIHsKICBoZWlnaHQ6IDEwMCU7Cn0K"},{"version":3,"sources":["login.vue"],"names":[],"mappings":";AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/views","sourcesContent":["<style scoped>\n.m {\n  height: 100%;\n}\n</style>\n<template>\n  <section class=\"section-container m\">\n    <v-row class=\"signin\" style=\"max-width: 100%; height: 100%\">\n      <v-col cols=\"8\" class=\"left\"> </v-col>\n      <v-col cols=\"4\" class=\"right\">\n        <v-container>\n          <h2>تسجيل الدخول</h2>\n          <validation-observer ref=\"observer\">\n            <v-form @submit.prevent=\"submit\">\n              <validation-provider\n                v-slot=\"{ errors }\"\n                name=\"اسم المستخدم\"\n                rules=\"required\"\n              >\n                <v-text-field\n                  v-model=\"email\"\n                  :error-messages=\"errors\"\n                  label=\"اسم المستخدم\"\n                  required\n                  outlined\n                  dark\n                  filled\n                  dense\n                ></v-text-field>\n              </validation-provider>\n              <validation-provider\n                v-slot=\"{ errors }\"\n                name=\"كلمة المرور\"\n                rules=\"required\"\n              >\n                <v-text-field\n                  v-model=\"password\"\n                  :error-messages=\"errors\"\n                  label=\"كلمة المرور\"\n                  :append-icon=\"showPass ? 'mdi-eye' : 'mdi-eye-off'\"\n                  @click:append=\"showPass = !showPass\"\n                  required\n                  outlined\n                  dense\n                  dark\n                  filled\n                  :type=\"showPass ? 'text' : 'password'\"\n                ></v-text-field>\n              </validation-provider>\n              <div class=\"text-center\">\n                <v-btn\n                  class=\"signin-btn\"\n                  type=\"submit\"\n                  rounded\n                  color=\"white\"\n                  dark\n                >\n                  دخول\n                </v-btn>\n              </div>\n              \n            </v-form>\n          </validation-observer>\n\n        </v-container>\n                  <v-progress-circular\n                indeterminate\n                color=\"green\"\n              ></v-progress-circular>\n      </v-col>\n    </v-row>\n  </section>\n</template>\n<script>\nimport Vue from \"vue\";\nimport axios from \"axios\";\nimport VueAxios from \"vue-axios\";\nimport VueSimpleAlert from \"vue-simple-alert\";\n\nVue.use(VueSimpleAlert, { reverseButtons: true });\nVue.use(VueAxios, axios);\n\nimport { required, email } from \"vee-validate/dist/rules\";\nimport {\n  extend,\n  ValidationProvider,\n  setInteractionMode,\n  ValidationObserver,\n} from \"vee-validate\";\n\nsetInteractionMode(\"eager\");\n\nextend(\"required\", {\n  ...required,\n  message: \"الرجاء تعبئة {_field_} \",\n});\n\nextend(\"email\", {\n  ...email,\n  message: \"Email must be valid\",\n});\n\nexport default {\n  components: {\n    ValidationProvider,\n    ValidationObserver,\n  },\n  data: () => ({\n    email: \"\",\n    password: null,\n    showPass: false,\n    loginRequestBody: {\n      EmpNo: \"\",\n      Password: \"\",\n    },\n  }),\n  computed: {\n    params() {\n      return {\n        email: this.email,\n        password: this.password,\n      };\n    },\n  },\n  methods: {\n    async submit() {\n      const valid = await this.$refs.observer.validate();\n      if (valid) {\n        this.loginRequestBody.EmpNo = this.email;\n        this.loginRequestBody.Password = this.password;\n        console.log(this.loginRequestBody);\n\n        Vue.axios\n          .post(\n            \"http://adf-testintgr01/EGPortalApi/api/cms/Login\",\n            this.loginRequestBody\n          )\n          .then((resp) => {\n            console.log(resp.data);\n            // go to main page\n          });\n      } //end if\n    },\n    clear() {\n      // you can use this method to clear login form\n      this.email = \"\";\n      this.password = null;\n      this.$refs.observer.reset();\n    },\n  },\n};\n</script>"]}]}