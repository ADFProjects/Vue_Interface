{"remainingRequest":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/babel-loader/lib/index.js!/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/@koumoul/vjsf/lib/utils/schema.js","dependencies":[{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/@koumoul/vjsf/lib/utils/schema.js","mtime":499162500000},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/cache-loader/dist/cjs.js","mtime":1612424882477},{"path":"/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/babel-loader/lib/index.js","mtime":1612424882354}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgX3R5cGVvZiBmcm9tICIvVXNlcnMvcmFnaGFkYXppei9EZXNrdG9wL0FERi9DTVMvVnVlX0ludGVyZmFjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3JhZ2hhZGF6aXovRGVza3RvcC9BREYvQ01TL1Z1ZV9JbnRlcmZhY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLyBTb21lIHV0aWwgZnVuY3Rpb25zIGFyb3VuZCBzY2hlbWEgbWFuaXB1bGF0aW9uIHRvIHJlZHVjZSBzaXplIG9mIHRoZSBQcm9wZXJ0eSBjb21wb25lbnQKdmFyIHNjaGVtYVV0aWxzID0ge307CmV4cG9ydCBkZWZhdWx0IHNjaGVtYVV0aWxzOwoKdmFyIG9iamVjdFRvQXJyYXkgPSBmdW5jdGlvbiBvYmplY3RUb0FycmF5KG9iaikgewogIHJldHVybiBPYmplY3Qua2V5cyhvYmogfHwge30pLm1hcChmdW5jdGlvbiAoa2V5KSB7CiAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBvYmpba2V5XSksIHt9LCB7CiAgICAgIGtleToga2V5CiAgICB9KTsKICB9KTsKfTsKCnZhciBnZXREZWVwS2V5ID0gZnVuY3Rpb24gZ2V0RGVlcEtleShvYmosIGtleSkgewogIHZhciBrZXlzID0ga2V5LnNwbGl0KCcuJyk7CgogIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykgewogICAgaWYgKFtudWxsLCB1bmRlZmluZWRdLmluY2x1ZGVzKG9iaikpIGJyZWFrOwogICAgb2JqID0gb2JqW2tleXNbaV1dOwogIH0KCiAgcmV0dXJuIG9iajsKfTsKCnZhciBleHRlbmRTY2hlbWEgPSBmdW5jdGlvbiBleHRlbmRTY2hlbWEoc2NoZW1hLCBzdWJTY2hlbWEpIHsKICBzY2hlbWEucmVxdWlyZWQgPSBzY2hlbWEucmVxdWlyZWQuY29uY2F0KHN1YlNjaGVtYS5yZXF1aXJlZCB8fCBbXSk7CiAgc2NoZW1hLnByb3BlcnRpZXMgPSBzY2hlbWEucHJvcGVydGllcy5jb25jYXQob2JqZWN0VG9BcnJheShzdWJTY2hlbWEucHJvcGVydGllcykpOwogIGlmIChzdWJTY2hlbWEub25lT2YpIHNjaGVtYS5vbmVPZiA9IChzY2hlbWEub25lT2YgfHwgW10pLmNvbmNhdChzdWJTY2hlbWEub25lT2YpOwogIGlmIChzdWJTY2hlbWEuYWxsT2YpIHNjaGVtYS5hbGxPZiA9IChzY2hlbWEuYWxsT2YgfHwgW10pLmNvbmNhdChzdWJTY2hlbWEuYWxsT2YpOwp9OwoKc2NoZW1hVXRpbHMucHJlcGFyZUZ1bGxTY2hlbWEgPSBmdW5jdGlvbiAoc2NoZW1hLCB2YWx1ZSwgb3B0aW9ucykgewogIHZhciBmdWxsU2NoZW1hID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShzY2hlbWEpKTsKICBpZiAoZnVsbFNjaGVtYS5wYXR0ZXJuKSBmdWxsU2NoZW1hLnBhdHRlcm5SZWdleHAgPSBuZXcgUmVnRXhwKGZ1bGxTY2hlbWEucGF0dGVybik7CiAgaWYgKCFmdWxsU2NoZW1hLnR5cGUgJiYgZnVsbFNjaGVtYS5wcm9wZXJ0aWVzKSBmdWxsU2NoZW1hLnR5cGUgPSAnb2JqZWN0JzsKCiAgaWYgKEFycmF5LmlzQXJyYXkoZnVsbFNjaGVtYS50eXBlKSkgewogICAgZnVsbFNjaGVtYS5udWxsYWJsZSA9IGZ1bGxTY2hlbWEudHlwZS5pbmNsdWRlcygnbnVsbCcpOwogICAgZnVsbFNjaGVtYS50eXBlID0gZnVsbFNjaGVtYS50eXBlLmZpbmQoZnVuY3Rpb24gKHQpIHsKICAgICAgcmV0dXJuIHQgIT09ICdudWxsJzsKICAgIH0pOwogICAgaWYgKGZ1bGxTY2hlbWEubnVsbGFibGUgJiYgZnVsbFNjaGVtYS5lbnVtKSBmdWxsU2NoZW1hLmVudW0gPSBmdWxsU2NoZW1hLmVudW0uZmlsdGVyKGZ1bmN0aW9uICh2KSB7CiAgICAgIHJldHVybiB2ICE9PSBudWxsOwogICAgfSk7CiAgfQoKICBpZiAoZnVsbFNjaGVtYS50eXBlICE9PSAnb2JqZWN0JykgcmV0dXJuIGZ1bGxTY2hlbWE7IC8vIFByb3BlcnRpZXMgYXMgYXJyYXkgZm9yIGVhc2llciBsb29wcwoKICBmdWxsU2NoZW1hLnByb3BlcnRpZXMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG9iamVjdFRvQXJyYXkoZnVsbFNjaGVtYS5wcm9wZXJ0aWVzKSkpOwogIGZ1bGxTY2hlbWEucmVxdWlyZWQgPSBmdWxsU2NoZW1hLnJlcXVpcmVkIHx8IFtdOwogIGZ1bGxTY2hlbWEuZGVwZW5kZW5jaWVzID0gZnVsbFNjaGVtYS5kZXBlbmRlbmNpZXMgfHwge307IC8vIEV4dGVuZCBzY2hlbWEgYmFzZWQgb24gc2F0aXNmaWVkIGRlcGVuZGVuY2llcwoKICBpZiAoZnVsbFNjaGVtYS5kZXBlbmRlbmNpZXMpIHsKICAgIE9iamVjdC5rZXlzKGZ1bGxTY2hlbWEuZGVwZW5kZW5jaWVzKS5mb3JFYWNoKGZ1bmN0aW9uIChkZXBLZXkpIHsKICAgICAgdmFyIGRlcCA9IGZ1bGxTY2hlbWEuZGVwZW5kZW5jaWVzW2RlcEtleV07IC8vIGNhc2VzIHdoZXJlIGRlcGVuZGVuY3kgZG9lcyBub3QgYXBwbHkKCiAgICAgIGlmICghdmFsdWUpIHJldHVybjsKICAgICAgdmFyIHZhbCA9IGdldERlZXBLZXkodmFsdWUsIGRlcEtleSk7CiAgICAgIGlmIChbbnVsbCwgdW5kZWZpbmVkLCBmYWxzZV0uaW5jbHVkZXModmFsKSkgcmV0dXJuOwogICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpICYmIHZhbC5sZW5ndGggPT09IDApIHJldHVybjsKICAgICAgaWYgKF90eXBlb2YodmFsKSA9PT0gJ29iamVjdCcgJiYgT2JqZWN0LmtleXModmFsKS5sZW5ndGggPT09IDApIHJldHVybjsgLy8gZGVwZW5kZW5jeSBhcHBsaWVzCgogICAgICBleHRlbmRTY2hlbWEoZnVsbFNjaGVtYSwgZGVwKTsKICAgIH0pOwogIH0gLy8gZXh0ZW5kIHNjaGVtYSBiYXNlZCBvbiBjb25kaXRpb25zCgoKICBpZiAoZnVsbFNjaGVtYS5pZikgewogICAgaWYgKCFvcHRpb25zLnZhbGlkYXRvcikgewogICAgICBjb25zb2xlLmVycm9yKCd2LWpzZiAtIFRoZSBjb25kaXRpb25hbCBpZi90aGVuL2Vsc2Ugc3ludGF4IHJlcXVpcmVzIHRoZSBhanYgb3Igb3RoZXIgdmFsaWRhdG9yIG9wdGlvbi4nKTsKICAgIH0gZWxzZSB7CiAgICAgIC8vIFRPRE86IHN0b3JlIHRoaXMgc29tZXdoZXJlIHNvIHRoYXQgaXQgaXMgbm90IHJlLWNvbXBpbGVkIG1hbnkgdGltZXMKICAgICAgdmFyIHZhbGlkYXRlID0gb3B0aW9ucy52YWxpZGF0b3IoZnVsbFNjaGVtYS5pZik7CiAgICAgIHZhciBlcnJvciA9IHZhbGlkYXRlKHZhbHVlKTsKCiAgICAgIGlmICghZXJyb3IgJiYgZnVsbFNjaGVtYS50aGVuKSB7CiAgICAgICAgZXh0ZW5kU2NoZW1hKGZ1bGxTY2hlbWEsIGZ1bGxTY2hlbWEudGhlbik7CiAgICAgIH0KCiAgICAgIGlmIChlcnJvciAmJiBmdWxsU2NoZW1hLmVsc2UpIHsKICAgICAgICBleHRlbmRTY2hlbWEoZnVsbFNjaGVtYSwgZnVsbFNjaGVtYS5lbHNlKTsKICAgICAgfQogICAgfQogIH0KCiAgcmV0dXJuIGZ1bGxTY2hlbWE7Cn07"},{"version":3,"sources":["/Users/raghadaziz/Desktop/ADF/CMS/Vue_Interface/node_modules/@koumoul/vjsf/lib/utils/schema.js"],"names":["schemaUtils","objectToArray","obj","Object","keys","map","key","getDeepKey","split","i","length","undefined","includes","extendSchema","schema","subSchema","required","concat","properties","oneOf","allOf","prepareFullSchema","value","options","fullSchema","JSON","parse","stringify","pattern","patternRegexp","RegExp","type","Array","isArray","nullable","find","t","enum","filter","v","dependencies","forEach","depKey","dep","val","if","validator","console","error","validate","then","else"],"mappings":"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","sourcesContent":["// Some util functions around schema manipulation to reduce size of the Property component\n\nconst schemaUtils = {}\n\nexport default schemaUtils\n\nconst objectToArray = (obj) => Object.keys(obj || {}).map(key => ({ ...obj[key], key }))\n\nconst getDeepKey = (obj, key) => {\n  const keys = key.split('.')\n  for (let i = 0; i < keys.length; i++) {\n    if ([null, undefined].includes(obj)) break\n    obj = obj[keys[i]]\n  }\n  return obj\n}\n\nconst extendSchema = (schema, subSchema) => {\n  schema.required = schema.required.concat(subSchema.required || [])\n  schema.properties = schema.properties.concat(objectToArray(subSchema.properties))\n  if (subSchema.oneOf) schema.oneOf = (schema.oneOf || []).concat(subSchema.oneOf)\n  if (subSchema.allOf) schema.allOf = (schema.allOf || []).concat(subSchema.allOf)\n}\n\nschemaUtils.prepareFullSchema = (schema, value, options) => {\n  const fullSchema = JSON.parse(JSON.stringify(schema))\n\n  if (fullSchema.pattern) fullSchema.patternRegexp = new RegExp(fullSchema.pattern)\n\n  if (!fullSchema.type && fullSchema.properties) fullSchema.type = 'object'\n  if (Array.isArray(fullSchema.type)) {\n    fullSchema.nullable = fullSchema.type.includes('null')\n    fullSchema.type = fullSchema.type.find(t => t !== 'null')\n    if (fullSchema.nullable && fullSchema.enum) fullSchema.enum = fullSchema.enum.filter(v => v !== null)\n  }\n  if (fullSchema.type !== 'object') return fullSchema\n\n  // Properties as array for easier loops\n  fullSchema.properties = JSON.parse(JSON.stringify(objectToArray(fullSchema.properties)))\n  fullSchema.required = fullSchema.required || []\n  fullSchema.dependencies = fullSchema.dependencies || {}\n\n  // Extend schema based on satisfied dependencies\n  if (fullSchema.dependencies) {\n    Object.keys(fullSchema.dependencies).forEach(depKey => {\n      const dep = fullSchema.dependencies[depKey]\n      // cases where dependency does not apply\n      if (!value) return\n      const val = getDeepKey(value, depKey)\n      if ([null, undefined, false].includes(val)) return\n      if (Array.isArray(val) && val.length === 0) return\n      if (typeof val === 'object' && Object.keys(val).length === 0) return\n\n      // dependency applies\n      extendSchema(fullSchema, dep)\n    })\n  }\n\n  // extend schema based on conditions\n  if (fullSchema.if) {\n    if (!options.validator) {\n      console.error('v-jsf - The conditional if/then/else syntax requires the ajv or other validator option.')\n    } else {\n      // TODO: store this somewhere so that it is not re-compiled many times\n      const validate = options.validator(fullSchema.if)\n      const error = validate(value)\n      if (!error && fullSchema.then) {\n        extendSchema(fullSchema, fullSchema.then)\n      }\n      if (error && fullSchema.else) {\n        extendSchema(fullSchema, fullSchema.else)\n      }\n    }\n  }\n  return fullSchema\n}\n"]}]}