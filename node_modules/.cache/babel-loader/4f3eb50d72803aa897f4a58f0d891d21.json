{"remainingRequest":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/babel-loader/lib/index.js!/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/src/views/ScanerUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/src/views/ScanerUpload.vue","mtime":1639649102000},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1640603462602},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/babel-loader/lib/index.js","mtime":1640603463148},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/cache-loader/dist/cjs.js","mtime":1640603462602},{"path":"/Users/raghadaziz/Desktop/Project_27-12-2021/Vue_Interface-main/node_modules/vue-loader/lib/index.js","mtime":1640603463334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgRHluYW1zb2Z0IGZyb20gImR3dCI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29udGFpbmVySWQ6ICJkd3RDb250cm9sQ29udGFpbmVyIiwKICAgICAgYldBU006IGZhbHNlCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy5iV0FTTSA9IGZhbHNlOwogICAgLyoqCiAgICAgKiBSZXNvdXJjZXNQYXRoICYgUHJvZHVjdEtleSBtdXN0IGJlIHNldCBpbiBvcmRlciB0byB1c2UgdGhlIGxpYnJhcnkhCiAgICAgKi8KCiAgICBEeW5hbXNvZnQuRFdULlJlc291cmNlc1BhdGggPSAiZHd0LXJlc291cmNlcyI7CiAgICBEeW5hbXNvZnQuRFdULm9yZ2FuaXphdGlvbklEID0gIjEwMDc4MDQwNSI7CiAgICBEeW5hbXNvZnQuRFdULkNvbnRhaW5lcnMgPSBbewogICAgICBXZWJUd2FpbklkOiAiZHd0T2JqZWN0IiwKICAgICAgQ29udGFpbmVySWQ6IHRoaXMuY29udGFpbmVySWQsCiAgICAgIFdpZHRoOiAiMTAwJSIsCiAgICAgIEhlaWdodDogIjQwMHB4IgogICAgfV07CiAgICBEeW5hbXNvZnQuRFdULlJlZ2lzdGVyRXZlbnQoIk9uV2ViVHdhaW5SZWFkeSIsIGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMuRHluYW1zb2Z0X09uUmVhZHkoKTsKICAgIH0pOwogICAgRHluYW1zb2Z0LkRXVC5Mb2FkKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBTYXZlSW1hZ2U6IGZ1bmN0aW9uIFNhdmVJbWFnZSgpIHsKICAgICAgaWYgKHRoaXMuRFdPYmplY3QpIHsKICAgICAgICB0aGlzLkRXT2JqZWN0LklmU2hvd0ZpbGVEaWFsb2cgPSB0cnVlOwogICAgICAgIGlmICh0aGlzLkRXT2JqZWN0Lkhvd01hbnlJbWFnZXNJbkJ1ZmZlciA+IDApIHRoaXMuRFdPYmplY3QuU2F2ZUFsbEFzTXVsdGlQYWdlVElGRigiV2ViVFdBSU5JbWFnZS50aWZmIik7CiAgICAgIH0KICAgIH0sCiAgICBEeW5hbXNvZnRfT25Qb3N0QWxsVHJhbnNmZXJzOiBmdW5jdGlvbiBEeW5hbXNvZnRfT25Qb3N0QWxsVHJhbnNmZXJzKCkgewogICAgICBpZiAodGhpcy5EV09iamVjdCkgewogICAgICAgIGlmICh0aGlzLkRXT2JqZWN0Lkhvd01hbnlJbWFnZXNJbkJ1ZmZlciA+IDApIHsKICAgICAgICAgIHZhciBzdHJIVFRQU2VydmVyID0gImh0dHBzOi8vZW1wLmFkZi5nb3Yuc2EiOwogICAgICAgICAgdGhpcy5EV09iamVjdC5IVFRQUG9ydCA9IGxvY2F0aW9uLnBvcnQgPT0gIiIgPyA0NDMgOiA0NDM7CiAgICAgICAgICB2YXIgc3RyQWN0aW9uUGFnZSA9ICIvY21zNzUxNDI1NC9hcGkvRmlsZU1hbmFnZXIvVXBsb2FkRmlsZT9rPWNtcyI7CiAgICAgICAgICAvKioKICAgICAgICAgICAqIDEuY2hhbmdlIGZpbGUgbmFtZQogICAgICAgICAgICoKICAgICAgICAgICAqLwoKICAgICAgICAgIHZhciB1cGxvYWRmaWxlbmFtZSA9ICJ0dC5wZGYiOwogICAgICAgICAgdGhpcy5EV09iamVjdC5DbGVhckFsbEhUVFBGb3JtRmllbGQoKTsKICAgICAgICAgIHRoaXMuRFdPYmplY3QuU2V0SFRUUEZvcm1GaWVsZCgiayIsICJjbXMiKTsKICAgICAgICAgIHRoaXMuRFdPYmplY3QuSFRUUFVwbG9hZEFsbFRocm91Z2hQb3N0QXNQREYoc3RySFRUUFNlcnZlciwgc3RyQWN0aW9uUGFnZSwgdXBsb2FkZmlsZW5hbWUsIGZ1bmN0aW9uIE9uSHR0cFVwbG9hZFN1Y2Nlc3MoKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJzdWNjZXNzZnVsIik7CiAgICAgICAgICB9LCBmdW5jdGlvbiBvblNlcnZlclJldHVybmVkU29tZXRoaW5nKGVycm9yQ29kZSwgZXJyb3JTdHJpbmcsIHJlc3BvbnNlKSB7CiAgICAgICAgICAgIGlmIChlcnJvckNvZGUgIT0gMCAmJiBlcnJvckNvZGUgIT0gLTIwMDMpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiZXJyb3JDb2RlOiAiICsgZXJyb3JDb2RlKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiZXJyb3JTdHJpbmc6ICIgKyBlcnJvclN0cmluZyk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLyoqCiAgICAgICAgICAgICAqIDIuIGFkZCB0byAoZmlsc1VybHMgKSBsaXN0IG5hbWUgLSBwYXRoIC0gdHlwZSAtIGNhdGVnb3J5CiAgICAgICAgICAgICAqCiAgICAgICAgICAgICAqLwoKCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJyZXNwb25zZTogIiArIHJlc3BvbnNlKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgICAvKgogICAgICAzLiBjYWxsIHVwbG9hZEZpbGVzCiAgICAgICovCgogICAgfSwKICAgIER5bmFtc29mdF9PblJlYWR5OiBmdW5jdGlvbiBEeW5hbXNvZnRfT25SZWFkeSgpIHsKICAgICAgdGhpcy5EV09iamVjdCA9IER5bmFtc29mdC5EV1QuR2V0V2ViVHdhaW4odGhpcy5jb250YWluZXJJZCk7CiAgICAgIHRoaXMuYldBU00gPSBEeW5hbXNvZnQuTGliLmVudi5iTW9iaWxlIHx8ICFEeW5hbXNvZnQuRFdULlVzZUxvY2FsU2VydmljZTsKCiAgICAgIGlmICh0aGlzLmJXQVNNKSB7CiAgICAgICAgdGhpcy5EV09iamVjdC5WaWV3ZXIuY3Vyc29yID0gInBvaW50ZXIiOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBzb3VyY2VzID0gdGhpcy5EV09iamVjdC5HZXRTb3VyY2VOYW1lcygpOwogICAgICAgIHRoaXMuc2VsZWN0U291cmNlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzb3VyY2VzIik7CiAgICAgICAgdGhpcy5zZWxlY3RTb3VyY2VzLm9wdGlvbnMubGVuZ3RoID0gMDsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzb3VyY2VzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB0aGlzLnNlbGVjdFNvdXJjZXMub3B0aW9ucy5hZGQobmV3IE9wdGlvbihzb3VyY2VzW2ldLCBpLnRvU3RyaW5nKCkpKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBBY3F1aXJlIGltYWdlcyBmcm9tIHNjYW5uZXJzIG9yIGNhbWVyYXMgb3IgbG9jYWwgZmlsZXMKICAgICAqLwogICAgYWNxdWlyZUltYWdlOiBmdW5jdGlvbiBhY3F1aXJlSW1hZ2UoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLkRXT2JqZWN0KSB0aGlzLkRXT2JqZWN0ID0gRHluYW1zb2Z0LkRXVC5HZXRXZWJUd2FpbigpOwoKICAgICAgaWYgKHRoaXMuYldBU00pIHsKICAgICAgICBhbGVydCgiU2Nhbm5pbmcgaXMgbm90IHN1cHBvcnRlZCB1bmRlciB0aGUgV0FTTSBtb2RlISIpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuRFdPYmplY3QuU291cmNlQ291bnQgPiAwICYmIHRoaXMuRFdPYmplY3QuU2VsZWN0U291cmNlQnlJbmRleCh0aGlzLnNlbGVjdFNvdXJjZXMuc2VsZWN0ZWRJbmRleCkpIHsKICAgICAgICB2YXIgb25BY3F1aXJlSW1hZ2VTdWNjZXNzID0gZnVuY3Rpb24gb25BY3F1aXJlSW1hZ2VTdWNjZXNzKCkgewogICAgICAgICAgX3RoaXMyLkRXT2JqZWN0LkNsb3NlU291cmNlKCk7CiAgICAgICAgfTsKCiAgICAgICAgdmFyIG9uQWNxdWlyZUltYWdlRmFpbHVyZSA9IG9uQWNxdWlyZUltYWdlU3VjY2VzczsKICAgICAgICB0aGlzLkRXT2JqZWN0Lk9wZW5Tb3VyY2UoKTsKICAgICAgICB0aGlzLkRXT2JqZWN0LkFjcXVpcmVJbWFnZSh7fSwgb25BY3F1aXJlSW1hZ2VTdWNjZXNzLCBvbkFjcXVpcmVJbWFnZUZhaWx1cmUpOwogICAgICB9IGVsc2UgewogICAgICAgIGFsZXJ0KCJObyBTb3VyY2UgQXZhaWxhYmxlISIpOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogT3BlbiBsb2NhbCBpbWFnZXMuCiAgICAgKi8KICAgIG9wZW5JbWFnZTogZnVuY3Rpb24gb3BlbkltYWdlKCkgewogICAgICBpZiAoIXRoaXMuRFdPYmplY3QpIHRoaXMuRFdPYmplY3QgPSBEeW5hbXNvZnQuRFdULkdldFdlYlR3YWluKCk7CiAgICAgIHRoaXMuRFdPYmplY3QuSWZTaG93RmlsZURpYWxvZyA9IHRydWU7CiAgICAgIC8qKgogICAgICAgKiBOb3RlOgogICAgICAgKiBUaGlzIGZvbGxvd2luZyBsaW5lIG9mIGNvZGUgdXNlcyB0aGUgUERGIFJhc3Rlcml6ZXIgd2hpY2ggaXMgYW4gZXh0cmEgYWRkLW9uIHRoYXQgaXMgbGljZW5zZWQgc2VwZXJhdGVseQogICAgICAgKi8KCiAgICAgIHRoaXMuRFdPYmplY3QuQWRkb24uUERGLlNldENvbnZlcnRNb2RlKER5bmFtc29mdC5EV1QuRW51bURXVF9Db252ZXJ0TW9kZS5DTV9SRU5ERVJBTEwpOwogICAgICB0aGlzLkRXT2JqZWN0LkxvYWRJbWFnZUV4KCIiLCBEeW5hbXNvZnQuRFdULkVudW1EV1RfSW1hZ2VUeXBlLklUX0FMTCwgZnVuY3Rpb24gKCkgey8vc3VjY2VzcwogICAgICB9LCBmdW5jdGlvbiAoKSB7Ly9mYWlsdXJlCiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ScanerUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\" class=\"justify-center text-center\">\n    <v-app id=\"inspire\">\n      <v-main>\n        <v-container>\n          <template>\n            <v-container>\n              <v-row>\n                <select v-if=\"!bWASM\" id=\"sources\"></select>\n\n                <v-btn\n                  v-if=\"!bWASM\"\n                  @click=\"acquireImage()\"\n                  class=\"mx-2\"\n                  fab\n                  dark\n                  large\n                  color=\"purple\"\n                >\n                  scan\n                </v-btn>\n                <v-btn @click=\"openImage()\" class=\"mx-2\" fab dark large color=\"green\">\n                open\n                </v-btn>\n                <v-btn class=\"mx-2\" fab dark large color=\"purple\"  @click=\"Dynamsoft_OnPostAllTransfers()\">\n                  upload\n                </v-btn>\n\n                <div v-bind:id=\"containerId\"></div>\n              </v-row>\n            </v-container>\n          </template>\n        </v-container>\n      </v-main>\n    </v-app>\n  </div>\n</template>\n<script>\nimport Dynamsoft from \"dwt\";\n\nexport default {\n  data: function () {\n    return {\n      containerId: \"dwtControlContainer\",\n      bWASM: false,\n    };\n  },\n  mounted() {\n    this.bWASM = false;\n    /**\n     * ResourcesPath & ProductKey must be set in order to use the library!\n     */\n    Dynamsoft.DWT.ResourcesPath = \"dwt-resources\";\n    Dynamsoft.DWT.organizationID = \"100780405\";\n    Dynamsoft.DWT.Containers = [\n      {\n        WebTwainId: \"dwtObject\",\n        ContainerId: this.containerId,\n        Width: \"100%\",\n        Height: \"400px\",\n      },\n    ];\n    Dynamsoft.DWT.RegisterEvent(\"OnWebTwainReady\", () => {\n      this.Dynamsoft_OnReady();\n    });\n    Dynamsoft.DWT.Load();\n  },\n  methods: {\n    SaveImage() {\n      if (this.DWObject) {\n        this.DWObject.IfShowFileDialog = true;\n        if (this.DWObject.HowManyImagesInBuffer > 0)\n          this.DWObject.SaveAllAsMultiPageTIFF(\"WebTWAINImage.tiff\");\n      }\n    },\n    Dynamsoft_OnPostAllTransfers() {\n      if (this.DWObject) {\n        if (this.DWObject.HowManyImagesInBuffer > 0) {\n          var strHTTPServer = \"https://emp.adf.gov.sa\";\n          this.DWObject.HTTPPort = location.port == \"\" ? 443 : 443;\n          var strActionPage = \"/cms7514254/api/FileManager/UploadFile?k=cms\";\n          /**\n           * 1.change file name\n           *\n           */\n          var uploadfilename = \"tt.pdf\";\n\n          this.DWObject.ClearAllHTTPFormField();\n          this.DWObject.SetHTTPFormField(\"k\", \"cms\");\n\n          this.DWObject.HTTPUploadAllThroughPostAsPDF(\n            strHTTPServer,\n            strActionPage,\n            uploadfilename,\n            function OnHttpUploadSuccess() {\n              console.log(\"successful\");\n            },\n            function onServerReturnedSomething(\n              errorCode,\n              errorString,\n              response\n            ) {\n              if (errorCode != 0 && errorCode != -2003) {\n                console.log(\"errorCode: \" + errorCode);\n                console.log(\"errorString: \" + errorString);\n              }\n              /**\n               * 2. add to (filsUrls ) list name - path - type - category\n               *\n               */\n              console.log(\"response: \" + response);\n            }\n          );\n        }\n      }\n      /*\n      3. call uploadFiles\n      */\n    },\n    Dynamsoft_OnReady() {\n      this.DWObject = Dynamsoft.DWT.GetWebTwain(this.containerId);\n      this.bWASM = Dynamsoft.Lib.env.bMobile || !Dynamsoft.DWT.UseLocalService;\n      if (this.bWASM) {\n        this.DWObject.Viewer.cursor = \"pointer\";\n      } else {\n        let sources = this.DWObject.GetSourceNames();\n        this.selectSources = document.getElementById(\"sources\");\n        this.selectSources.options.length = 0;\n        for (let i = 0; i < sources.length; i++) {\n          this.selectSources.options.add(new Option(sources[i], i.toString()));\n        }\n      }\n    },\n    /**\n     * Acquire images from scanners or cameras or local files\n     */\n    acquireImage() {\n      if (!this.DWObject) this.DWObject = Dynamsoft.DWT.GetWebTwain();\n      if (this.bWASM) {\n        alert(\"Scanning is not supported under the WASM mode!\");\n      } else if (\n        this.DWObject.SourceCount > 0 &&\n        this.DWObject.SelectSourceByIndex(this.selectSources.selectedIndex)\n      ) {\n        const onAcquireImageSuccess = () => {\n          this.DWObject.CloseSource();\n        };\n        const onAcquireImageFailure = onAcquireImageSuccess;\n        this.DWObject.OpenSource();\n        this.DWObject.AcquireImage(\n          {},\n          onAcquireImageSuccess,\n          onAcquireImageFailure\n        );\n      } else {\n        alert(\"No Source Available!\");\n      }\n    },\n    /**\n     * Open local images.\n     */\n    openImage() {\n      if (!this.DWObject) this.DWObject = Dynamsoft.DWT.GetWebTwain();\n      this.DWObject.IfShowFileDialog = true;\n      /**\n       * Note:\n       * This following line of code uses the PDF Rasterizer which is an extra add-on that is licensed seperately\n       */\n      this.DWObject.Addon.PDF.SetConvertMode(\n        Dynamsoft.DWT.EnumDWT_ConvertMode.CM_RENDERALL\n      );\n      this.DWObject.LoadImageEx(\n        \"\",\n        Dynamsoft.DWT.EnumDWT_ImageType.IT_ALL,\n        () => {\n          //success\n        },\n        () => {\n          //failure\n        }\n      );\n    },\n  },\n};\n</script>\n\n"],"sourceRoot":"src/views"}]}